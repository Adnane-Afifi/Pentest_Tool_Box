import ipaddress
import os
import sys
import subprocess

# colors
RED = '\033[31m'
GREEN = '\033[32m'

'''
This function check argument of each command min/max
return true if the format is valid
return false if the format is not valid
'''
# def check_numberof_arguments():
'''
This function have to check the host IP adress format 
return true if the format is valid
return false if is not valid 
'''


def check_ip_format(ip_address):
    try:
        ip = ipaddress.ip_address(ip_address)
        print(GREEN + " The following IP address has valid format {}.".format(ip_address))
        return True
    except ValueError:
        print(RED + " Error: The following IP address has bad format {}.".format(ip_address))
        return False


'''
This function  check if the options that user choose has valid format.
return true if the format is valid
return false if the format is not valid 
'''


def check_options_format(number_of_argument):
    if len(sys.argv) != number_of_argument:
        print(GREEN + " Error: expected {} arguments".format(number_of_argument))
        return False
    else:
        print(RED + "Number of arguments ...........OK")
        return True


'''
This function should check the OS version >
return the name of the OS.
'''


def check_OS():
    print(" Checking your ip OS ........................")
    # Check if the operating system is Windows
    if os.name == "nt":
        print("The operating system is .....Windows")
        return 'Windows'
    # Check if the operating system is Linux or macOS
    elif os.name in ("posix", "mac"):
        print("The operating system is Linux or macOS")
        return 'MAC/Linux'
    # Other operating systems
    else:
        print("The operating system is unknown")


''' NOTE: This check just for linux devices // should check also for other OS.(MAC)
          Maybe we have to add another function that check for a list of packages instead of 1.
This function should check that the package has already been installed in the system 
return true if the packet is installed
return false if it is not installed 
'''


def check_packages(package_name):
    print(" Checking packages ..................")
    result = subprocess.run(['apt', 'list', '--installed'], stdout=subprocess.PIPE)
    output = result.stdout.decode('utf-8')
    if package_name in output:
        print(" The {} package is installed : OK . ".format(package_name))
        return True
    else:
        print(" The {} package is not installed : ERROR.".format(package_name))
        return False


'''
This function should switch from a mod to another .
exem
It's not expected to return smtg .
'''
#def switch_mod(mod):
    