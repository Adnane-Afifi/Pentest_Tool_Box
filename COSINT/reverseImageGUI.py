import tkinter as tk
from tkinter import filedialog
import webbrowser


def reverse_image_search():
    root = tk.Tk()
    root.title("Reverse Image Search")
    root.geometry("400x200")
    root.eval('tk::PlaceWindow %s center' % root.winfo_pathname(root.winfo_id()))
    # root.configure(bg='black')
    # img = tk.PhotoImage(file="./bg.png")
    # background_label = tk.Label(root, image=img)
    # background_label.place(x=0, y=0, relwidth=1, relheight=1)

    label_url = tk.Label(root, text="Enter image URL:")
    label_url.pack()
    image_url = tk.Entry(root)
    image_url.pack()

    button_file = tk.Button(root, text="Select Image", command=open_file)
    button_file.pack()

    engine = tk.StringVar(root)
    engine.set("Google")
    dropdown = tk.OptionMenu(root, engine, "Google", "Bing", "Yandex", "TinEye")
    dropdown.pack()

    button_search = tk.Button(root, text="Search", command=lambda: open_image_search(engine.get(), image_url.get()))
    button_search.pack()

    root.mainloop()


def open_file():
    # Open file explorer
    filepath = filedialog.askopenfilename()
    return filepath


# TODO: Fixer le probleme de telle sorte que la rerche d'image peut se faire en local + via url / pb avec le fichier en local
def open_image_search(engine, image_url):
    if image_url:
        image_url = image_url
    else:
        image_url = open_file()
    if engine == "Google":
        webbrowser.open(f"https://www.google.com/searchbyimage?image_url={image_url}")
    elif engine == "Bing":
        webbrowser.open(f"https://www.bing.com/images/search?q=imgurl:{image_url}")
    elif engine == "Yandex":
        webbrowser.open(f"https://yandex.com/images/search?url={image_url}")
    elif engine == "TinEye":
        webbrowser.open(f"https://www.tineye.com/search?url={image_url}")
    else:
        print("Invalid search engine")


# Call the function
reverse_image_search()
