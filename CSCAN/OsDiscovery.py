import nmap
import re
import subprocess


def nmap_os_discovery(hosts):
    custom_nmap = nmap.PortScanner()
    custom_nmap.scan(hosts, arguments="--script smb-os-discovery")
    output = custom_nmap.get_nmap_last_output()
    results = {}
    for host in custom_nmap.all_hosts():
        os = parse_nmap_output(output)
        results[host] = os
    return results


def nmap_os_discovery_using_NSE(hosts):
    custom_nmap = nmap.PortScanner()
    custom_nmap.scan(hosts=hosts, arguments="--script smb-os-discovery")
    output = custom_nmap.get_nmap_last_output()
    results = {}
    for host in custom_nmap.all_hosts():
        os = parse_nmap_output(output)
        results[host] = os
    return results


def unicornscan_os_discovery(hosts):
    unicornscan_output = subprocess.run(["unicornscan", "-mT", hosts], capture_output=True).stdout.decode()
    return unicornscan_output


def parse_uniconrscan_output(output):
    ttl_pattern = re.compile(r"ttl=(\d+)")
    ttl_value = []
    for line in output.split("\n"):
        ttl_match = ttl_pattern.search(line)
        if ttl_match:
            ttl_value.append(int(ttl_match.group(1)))
    return ttl_value


''''
ttl_values = [64, 128, 128, 64, 128, 255, 128]
ttl_counts = {
    64: 2,
    128: 4,
    255: 1,
}
'''


def detect_os_based_on_ttl(ttl_values):
    ttl_os_map = {
        64: "Linux",
        128: "Windows",
        255: "Cisco",
    }
    ttl_counts = {}
    for ttl in ttl_values:
        if ttl in ttl_counts:
            ttl_counts[ttl] += 1
        else:
            ttl_counts[ttl] = 1
    most_common_ttl = max(ttl_counts, key=ttl_counts.get)
    return ttl_os_map.get(most_common_ttl, "Unknow")


def parse_nmap_output(output):
    os_patterns = re.compile(r"Running:\s+(\S+)")
    os_match = os_patterns.search(output)
    if os_match:
        os = os_match.group(1)
    else:
        os = "Unknown"
    return os


def generate_html_page(results):
    html = """
           <html>
           <head>
               <title>OS Detection Results</title>
           </head>
           <body>
               <h1>OS Detection Results</h1>
               <table>
                   <tr>
                       <th>Host</th>
                       <th>Operating System</th>
                   </tr>
       """
    for host, os in results.items():
        html += """
                   <tr>
                       <td>{}</td>
                       <td>{}</td>
                   </tr>
           """.format(host, os)
    html += """
               </table>
           </body>
           </html>
       """
    return html


'''
    host = "example.com"
    nmap_output = run_nmap(host)
    os = parse_nmap_output(nmap_output)
    html = generate_html_page(os)
    print(html)
    
    host = "example.com"
    unicornscan_output = run_unicornscan(host)
    ttl_values = parse_unicornscan_output(unicornscan_output)
    os = detect_os(ttl_values)
'''
