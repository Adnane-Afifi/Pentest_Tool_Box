import nmap
from jinja2 import Template


def render_template(template_string, **kwargs):
    template = Template(template_string)
    return template.render(**kwargs)


def generate_html_report(host, scan_results):
    # Generate the HTML report using a Jinja2 template
    template = """
    <html>
    <head>
        <h1>Nmap Scan Results</h1>
        <h2>Scanned IP Addresses:</h2>
    </head>
    <body>
         <ul>
        {% for host, host_results in scan_results.items() %}
            <li>{{ host }}</li>
        {% endfor %}
         </ul>
        {% for host, host_results in scan_results.items() %}
        
        <h2>Scan Results for {{ host }}</h2>
        
        <table>
            <tr>
                <th>Port</th>
                <th>Protocol</th>
                <th>State</th>
                <th>Service</th>
            </tr>
           {% for port, info in scan_results.items() %}
            <tr>
                <td>{{ port }}</td>
                <td>{{ info['protocol'] }}</td>
                <td>{{ info['state'] }}</td>
                <td>{{ info['name'] }}</td>
            </tr>
           {% endfor %}
        </table>
         {% endfor %}
    </body>
    </html>
    """
    html_report = render_template(template, host=host, scan_results=scan_results)
    with open('nmap_report.html', 'w') as f:
        f.write(html_report)
    return html_report


# NMAP
def advanced_scan_v1(host, type):
    custom_nmap = nmap.PortScanner()
    advanced_type_scan = {'NULL SCAN': 'sN', 'FIN SCAN': 'sF', 'XMAS': 'sX'}
    custom_nmap.scan(hosts=host, arguments='-' + str(advanced_type_scan[type]))
    scan_results = {}
    for host in custom_nmap.all_hosts():
        host_results = {}
        if ('tcp' or 'udp') in custom_nmap[host]:
            for port in custom_nmap[host]['tcp']:
                info = custom_nmap[host]['tcp'][port]
                host_results[port] = {
                    'protocol': 'tcp',
                    'state': info['state'],
                    'name': info['name']
                }
        scan_results[host] = host_results
    html_report = generate_html_report(host, host_results)
    return html_report

#ADD METHODS TO BYpass Firewalls and IDS
def advanced_scan_V2(host, type):
    custom_nmap = nmap.PortScanner()
    advanced_type_scan = {'ACK SCAN': 'sA', 'Window scan': 'sW', 'Zombie scan': 'sI'}
    custom_nmap.scan(hosts=host, arguments='-' + str(advanced_type_scan[type]))
    scan_results = {}
    for host in custom_nmap.all_hosts():
        host_results = {}
        if ('tcp' or 'udp') in custom_nmap[host]:
            for port in custom_nmap[host]['tcp']:
                info = custom_nmap[host]['tcp'][port]
                host_results[port] = {
                    'protocol': 'tcp',
                    'state': info['state'],
                    'name': info['name']
                }
        scan_results[host] = host_results
    html_report = generate_html_report(host, host_results)
    return html_report
