import nmap
from jinja2 import Template


def get_options(options):
    for key, value in options.items():
        print(f"{key}")
    sub_option = input("Enter your choice: ")
    for key, value in options.items():
        print(key.__contains__(sub_option))
        if key.__contains__(sub_option):
            return key
        else:
            continue
    print("Invalid option")
    get_options(options)
def render_template(template_string, **kwargs):
    template = Template(template_string)
    return template.render(**kwargs)


def generate_html_report(host, scan_results):
    # Generate the HTML report using a Jinja2 template
    template = """
      <html>
      <head>
          <title>Nmap Scan Results</title>
      </head>
      <body>
       {% for hosts,hosts_info in scan_results.items() %}
          <h1>Nmap Scan Results for {{ hosts }}</h1>
          <table>
              <tr>
                  <th>Port</th>
                  <th>Protocol</th>
                  <th>State</th>
                  <th>Service</th>
              </tr>
             {% for port, info in hosts_info.items() %}
              <tr>
                  <td>{{ port }}</td>
                  <td>{{ info['protocol'] }}</td>
                  <td>{{ info['state'] }}</td>
                  <td>{{ info['name'] }}</td>
              {% endfor %}
              </tr>
          </table>
              {% endfor %}
      </body>
      </html>
      """
    html_report = render_template(template, host=host, scan_results=scan_results)
    with open('nmap_report.html', 'w') as f:
        f.write(html_report)
    return html_report


# NMAP
def advanced_scan_v1(host):
    custom_nmap = nmap.PortScanner()
    advanced_type_scan = {'1.NULL SCAN': 'sN', '2.FIN SCAN': 'sF', '3.XMAS': 'sX'}
    type = get_options(advanced_type_scan)
    print(type)
    custom_nmap.scan(hosts=host, arguments='-' + str(advanced_type_scan[str(type)]))
    scan_results = {}
    for host in custom_nmap.all_hosts():
        host_results = {}
        if ('tcp' or 'udp') in custom_nmap[host]:
            for port in custom_nmap[host]['tcp']:
                info = custom_nmap[host]['tcp'][port]
                host_results[port] = {
                    'protocol': 'tcp',
                    'state': info['state'],
                    'name': info['name']
                }
        scan_results[host] = host_results
    html_report = generate_html_report(host, scan_results)
    return html_report


def advanced_scan_V2(host):
    custom_nmap = nmap.PortScanner()
    advanced_type_scan = {'1.ACK SCAN': 'sA', '2.Window scan': 'sW', '3.Zombie scan': 'sI'}
    type = get_options(advanced_type_scan)
    print(type)
    custom_nmap.scan(hosts=host, arguments='-' + str(advanced_type_scan[str(type)]))
    scan_results = {}
    for host in custom_nmap.all_hosts():
        host_results = {}
        if ('tcp' or 'udp') in custom_nmap[host]:
            for port in custom_nmap[host]['tcp']:
                info = custom_nmap[host]['tcp'][port]
                host_results[port] = {
                    'protocol': 'tcp',
                    'state': info['state'],
                    'name': info['name']
                }
        scan_results[host] = host_results
    html_report = generate_html_report(host, host_results)
    return html_report

#TODO :ADD METHODS TO BYpass Firewalls and IDS