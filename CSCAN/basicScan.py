import nmap
from jinja2 import Template
import requests
from bs4 import BeautifulSoup


def get_options(options):
    for key, value in options.items():
        print(f"{key}")
    sub_option = input("Enter your choice: ")
    return sub_option


def render_template(template_string, **kwargs):
    template = Template(template_string)
    return template.render(**kwargs)


# FIX THE HTML OUTPUT
# TODO
def generate_html_report(host, scan_results):
    # Generate the HTML report using a Jinja2 template
    template = """
    <html>
    <head>
        <title>Nmap Scan Results</title>
    </head>
    <body>
          {% for host, host_results in scan_results.items() %}
        <h1>Nmap Scan Results for {{ host }}</h1>
        <table>
            <tr>
                <th>Port</th>
                <th>Protocol</th>
                <th>State</th>
                <th>Service</th>
            </tr>
           {% for port, info in scan_results.items() %}
            <tr>
                <td>{{ port }}</td>
                <td>{{ info['protocol'] }}</td>
                <td>{{ info['state'] }}</td>
                <td>{{ info['name'] }}</td>
            </tr>
           {% endfor %}
        </table>
         {% endfor %}
    </body>
    </html>
    """
    html_report = render_template(template, host=host, scan_results=scan_results)
    with open('nmap_report.html', 'w') as f:
        f.write(html_report)
    return html_report


'''
The user have to precise the type of scan that he want and then accordinatly to the basic scan that he choose the scan 
will be realeased :
TCP
SYN 
UDP
'''


def basic_scan(host):
    custom_nmap = nmap.PortScanner()
    basic_type_scan = {'1. Tcp scan': 'sT', '2. Default scan': 'sS', '3. UDP scan ': 'U'}
    type = get_options(basic_type_scan)
    print(type)
    custom_nmap.scan(hosts=host, arguments='-' + str(basic_type_scan[str(type)]))
    scan_results = {}
    for host in custom_nmap.all_hosts():
        host_results = {}
        if ('tcp' or 'udp') in custom_nmap[host]:
            for port in custom_nmap[host]['tcp']:
                info = custom_nmap[host]['tcp'][port]
                host_results[port] = {
                    'protocol': 'tcp',
                    'state': info['state'],
                    'name': info['name']
                }
        scan_results[host] = host_results
    html_report = generate_html_report(host, host_results)
    return html_report

# htm_reprot = basic_scan("10.10.153.3")
# print(htm_reprot)

# TODO:Fix how the user will precise the type of scan should not be in parameter to check.
